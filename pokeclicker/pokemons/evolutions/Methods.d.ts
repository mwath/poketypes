/// <reference path="../../GameConstants.d.ts"/>
/// <reference path="../PokemonNameType.d.ts"/>
 declare const DayCyclePartRestrictedLevelEvolution: (dayCycleParts: import("../../dayCycle/DayCyclePart").default[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const DayCyclePartRestrictedStoneEvolution: (dayCycleParts: import("../../dayCycle/DayCyclePart").default[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, stone: StoneType) => import("./Base").EvoData;
 declare const DayTimedLevelEvolution: (basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const NightTimedLevelEvolution: (basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const DayTimedStoneEvolution: (basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, stone: StoneType) => import("./Base").EvoData;
 declare const NightTimedStoneEvolution: (basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, stone: StoneType) => import("./Base").EvoData;
 declare const DungeonRestrictedLevelEvolution: (dungeon: string, basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const AnyDungeonLevelEvolution: (...rest: unknown[]) => import("./Base").EvoData;
 declare const AnyGymLevelEvolution: (...rest: unknown[]) => import("./Base").EvoData;
 declare const EnvironmentRestrictedLevelEvolution: (environment: string, basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const EnvironmentDungeonLevelEvolution: (environment: string, ...rest: unknown[]) => import("./Base").EvoData;
 declare const EnvironmentGymLevelEvolution: (environment: string, ...rest: unknown[]) => import("./Base").EvoData;
 declare const RegionStoneEvolution: (regions: import("../../GameConstants").Region[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, stone: StoneType) => import("./Base").EvoData;
 declare const RegionLevelEvolution: (regions: import("../../GameConstants").Region[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const RegionDayTimedLevelEvolution: (regions: import("../../GameConstants").Region[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const RegionNightTimedLevelEvolution: (regions: import("../../GameConstants").Region[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const QuestlineLevelEvolution: (questName: string, basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const QuestlineStoneEvolution: (questName: string, basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, stone: StoneType) => import("./Base").EvoData;
 declare const HeldItemLevelEvolution: (heldItemName: import("../../items/ItemNameType").ItemNameType, basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const WeatherRestrictedLevelEvolution: (weather: import("../../weather/WeatherType").default[], basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType, level: number) => import("./Base").EvoData;
 declare const MegaEvolution: (megaStone: import("../../GameConstants").MegaStoneType, basePokemon: PokemonNameType, evolvedPokemon: PokemonNameType) => import("./Base").EvoData;
